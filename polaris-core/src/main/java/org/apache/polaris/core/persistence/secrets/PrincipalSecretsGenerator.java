/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */
package org.apache.polaris.core.persistence.secrets;

import org.apache.polaris.core.entity.PolarisPrincipalSecrets;
import org.jetbrains.annotations.NotNull;
import org.jetbrains.annotations.Nullable;

/**
 * An interface for generating principal secrets. It enables detaching the secret generation logic
 * from services that actually manage principal objects (create, remove, rotate secrets, etc.)
 *
 * <p>The implementation statically available from {@link #bootstrap(String)} allows one-time client
 * ID and secret overrides via environment variables, which can be useful for bootstrapping new
 * realms.
 *
 * <p>The environment variable name follow this pattern:
 *
 * <ul>
 *   <li>{@code POLARIS_BOOTSTRAP_<REALM-NAME>_<PRINCIPAL-NAME>_CLIENT_ID}
 *   <li>{@code POLARIS_BOOTSTRAP_<REALM-NAME>_<PRINCIPAL-NAME>_CLIENT_SECRET}
 * </ul>
 *
 * For example: {@code POLARIS_BOOTSTRAP_default-realm_root_CLIENT_ID} and {@code
 * POLARIS_BOOTSTRAP_default-realm_root_CLIENT_SECRET}.
 */
public abstract class PrincipalSecretsGenerator {

  protected final String realmName;

  public PrincipalSecretsGenerator() {
    this.realmName = null;
  }

  public PrincipalSecretsGenerator(@Nullable String realmName) {
    this.realmName = realmName;
  }

  /**
   * Produces a new {@link PolarisPrincipalSecrets} object for the given principal ID. The returned
   * secrets may or may not be random, depending on context. The returned secrets can be predefined.
   *
   * @param principalName the name of the related principal. This parameter is a hint for
   *     pre-defined secrets lookup during bootstrapping it is not included in the returned data.
   * @param principalId the ID of the related principal. This ID is part of the returned data.
   * @return a new {@link PolarisPrincipalSecrets} instance for the specified principal.
   */
  public abstract PolarisPrincipalSecrets produceSecrets(
      @NotNull String principalName, long principalId);

  /**
   * @param principalName the name of the related principal. This parameter is a hint for
   *                      pre-defined secrets lookup during bootstrapping it is not included in the returned data.
   * @return true if the secrets generated by this {@link PrincipalSecretsGenerator} are
   * Polaris-generated as opposed to being provided by the user or another system.
   */
  public abstract boolean systemGeneratedSecrets(@NotNull String principalName);

  /**
   * Build a PrincipalSecretsGenerator for bootstrapping
   *
   * @param realmName the name of the realm
   * @return A {@link PrincipalSecretsGenerator} that can generate secrets through `produceSecrets`
   */
  public static PrincipalSecretsGenerator bootstrap(String realmName) {
    return new DefaultPrincipalSecretsGenerator(realmName);
  }
}
